{"version":3,"sources":["components/keyboard/Keyboard.jsx","components/WordDisplayer/WordDisplayer.jsx","components/context/SocketContext.js","components/pendu/Pendu.jsx","components/game/Game.jsx","components/messageBubble/MessageBubble.jsx","components/chatBox/ChatBox.jsx","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Keyboard","setCurrentLetter","this","props","letters","i","push","className","readOnly","key","onClick","String","fromCharCode","charCodeAt","Component","WordDisplayer","wordLetters","currentWord","currentLetter","length","style","color","transform","SocketContext","React","createContext","SocketProvider","Provider","Consumer","Pendu","letter","setPlayerInfo","player","context","emit","name","score","question","word","bind","desc","contextType","Game","handleFormSubmit","e","socket","preventDefault","state","formWord","formDesc","setState","showForm","playerDown","username","playerTop","ennemy","players","pause","console","log","on","window","location","replace","alert","number","onSubmit","marginBottom","type","placeholder","value","onChange","target","MessageBubble","msg","title","isMine","ChatBox","handleSubmit","newMsgs","msgs","slice","message","owner","playerName","messages","Login","submitHandler","room","rooms","roomUser","start","textAlign","autoFocus","red","buttonRef","Object","keys","map","r","user","App","savePlayerData","data","playerData","ennemyName","playersNames","filter","p","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","io","id","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7ff7f56c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./keyboard.css\";\r\n\r\n\r\nexport default class Keyboard extends Component {\r\n    render() {\r\n        const {setCurrentLetter } = this.props;\r\n        let letters = [];\r\n        for(let i=0;i<26;i++){\r\n            letters.push(<div className={\"letter \"+(!this.props.readOnly?\"letterH\":\"\")} key ={i} onClick={this.props.readOnly?null:()=>setCurrentLetter(String.fromCharCode(\"a\".charCodeAt(0)+i))}>{String.fromCharCode(\"a\".charCodeAt(0)+i)}</div>);\r\n        }\r\n        return (\r\n            <div className =\"keyboard\">\r\n                \r\n                {letters}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./wordDisplayer.css\"\r\nexport default class WordDisplayer extends Component {\r\n    render() {\r\n    \r\n        let wordLetters = [];\r\n        const {currentWord ,currentLetter} = this.props;\r\n        for(let i=0;i<currentWord.length;i++)\r\n        {\r\n            wordLetters.push(<div \r\n                                    className =\"wordLetter\" \r\n                                    style={{color:i>=currentLetter?\"transparent\":\"\",transform:currentLetter===i?\"scale(1.2)\":\"\"}} \r\n                                    key={i}\r\n                                    >{currentWord[i]}\r\n                                    \r\n                             </div>)\r\n        }\r\n      \r\n        return (\r\n            <div className='wordDisplayer'>\r\n                    {wordLetters}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst SocketContext = React.createContext()\r\n\r\nexport const SocketProvider = SocketContext.Provider\r\nexport const SocketConsumer = SocketContext.Consumer\r\n\r\nexport default SocketContext","import React, { Component } from 'react';\r\nimport \"./pendu.css\";\r\nimport Keyboard from '../keyboard/Keyboard';\r\nimport WordDisplayer from '../WordDisplayer/WordDisplayer';\r\nimport SocketContext from '../context/SocketContext';\r\nexport default class Pendu extends Component {\r\n    static contextType = SocketContext;\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n      \r\n        \r\n    }\r\n  \r\n    setCurrentLetter = (letter) =>{\r\n\r\n        const {setPlayerInfo,player,currentLetter} = this.props;\r\n        const socket = this.context;\r\n        socket.emit(\"clientLetterPressed\",{currentLetter,letter})\r\n\r\n     \r\n      \r\n      \r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div className = \"pendu\">\r\n                <div className =\"player\">player : {this.props.player.name}</div>\r\n                <div className =\"score\">score: {this.props.score}</div>\r\n                <WordDisplayer \r\n                    currentWord = {!this.props.question.word?\"\":this.props.question.word} \r\n                    currentLetter={this.props.currentLetter}\r\n                    \r\n                   \r\n                    />\r\n                <Keyboard\r\n                 setCurrentLetter = {this.setCurrentLetter.bind(this)}\r\n                 readOnly={this.props.readOnly}\r\n                />\r\n                <div className=\"questionDesc\">{this.props.question.desc}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport \"./game.css\";\r\nimport Pendu from '../pendu/Pendu';\r\nimport SocketContext from '../context/SocketContext';\r\n\r\nexport default class Game extends Component {\r\n    static contextType = SocketContext;\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            playerDown:{name:this.props.player.username},\r\n            playerTop:{name:this.props.ennemy},\r\n            players:[],\r\n            pause:false,\r\n            showForm:false,\r\n            formWord:\"\",\r\n            formDesc:\"\"\r\n\r\n        }\r\n      \r\n    }\r\n    componentDidMount()\r\n    {\r\n        const socket = this.context;\r\n        socket.emit(\"readyToStartTheGame\",()=>{\r\n            console.log(\"readyToStartTheGame...\");\r\n        });\r\n      \r\n            socket.on(\"serverGetQuestion\",()=>{\r\n                console.log(\"serverGetQuestion.........\");\r\n                \r\n                this.setState({showForm:true});\r\n              \r\n               \r\n                \r\n              \r\n            })\r\n     \r\n        \r\n        socket.on(\"serverSendQuestion\",(players)=>{\r\n            this.setState({\r\n                players\r\n            })\r\n            console.log(\"question recieved\",players);\r\n        });\r\n        socket.on(\"playersUpdate\",(players)=>{\r\n            this.setState({\r\n                players\r\n            })\r\n            console.log(\"players data updated\",players);\r\n        });\r\n        socket.on(\"goOut\",()=>{\r\n            window.location.replace(\"/\");\r\n            alert(\"your oponent has disconnected!\")\r\n           \r\n        })\r\n       \r\n\r\n    }\r\n    handleFormSubmit = (e)=>{\r\n        const socket = this.context;\r\n        e.preventDefault();\r\n        const word = this.state.formWord;\r\n        const desc = this.state.formDesc;\r\n        if(word ===\"\" || desc ===\"\") return;\r\n\r\n        socket.emit(\"clientSendQuestion\",{word,desc});\r\n        this.setState({showForm:false});\r\n    }\r\n   \r\n    render() {\r\n        const {playerDown,playerTop} = this.state;\r\n        return (\r\n            <div className =\"game\">\r\n                \r\n                        \r\n                           <Pendu \r\n                                player={playerTop} \r\n                                question ={this.state.players[(this.props.player.number-1)===0?1:0]?this.state.players[(this.props.player.number-1)===0?1:0].question:{word:\"\",desc:\"\"}}\r\n                                readOnly = {true}\r\n                                currentLetter = {this.state.players[(this.props.player.number-1)===0?1:0]?this.state.players[(this.props.player.number-1)===0?1:0].currentLetter:0}\r\n                                score = {this.state.players[(this.props.player.number-1)===0?1:0]?this.state.players[(this.props.player.number-1)===0?1:0].score:0}\r\n                                />\r\n                          \r\n                           <Pendu \r\n                            player={playerDown} \r\n                            question ={this.state.players[this.props.player.number-1]?this.state.players[this.props.player.number-1].question:{word:\"\",desc:\"\"}}\r\n                            currentLetter = {this.state.players[this.props.player.number-1]?this.state.players[this.props.player.number-1].currentLetter:0}\r\n                            score ={this.state.players[this.props.player.number-1]?this.state.players[this.props.player.number-1].score:0}\r\n                            />\r\n                            {\r\n                                this.state.showForm&& <form className=\"gameForm\" onSubmit={this.handleFormSubmit.bind(this)}>\r\n                                                        <h4 style={{color:\"white\",marginBottom:\"5px\"}}>challenge your openent!</h4>\r\n                                                        <input type=\"text\" placeholder=\"word\" value={this.state.formWord} onChange={(e)=>this.setState({formWord:e.target.value})}/>\r\n                                                        <textarea type=\"text\" placeholder=\"description\" value={this.state.formDesc} onChange={(e)=>this.setState({formDesc:e.target.value})}/>\r\n                                                        <button>button</button>\r\n                                                     </form>\r\n                            }\r\n                           \r\n                  \r\n                 \r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./messagebubble.css\"\r\nexport default class MessageBubble extends Component {\r\n    render() {\r\n        const {msg,title} = this.props;\r\n        return (\r\n            <div className =\"messageBubble\">\r\n                       \r\n                     \r\n                <div className =\"messageTitle\">{title}</div>\r\n                <div className={`${this.props.isMine?\"messageContentMine\":\"messageContent\"}`}> {msg}</div>\r\n                                \r\n                        \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./chatBox.css\";\r\nimport MessageBubble from '../messageBubble/MessageBubble';\r\nimport SocketContext from '../context/SocketContext';\r\nexport default class ChatBox extends Component {\r\n    static contextType = SocketContext;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            msgs:[],\r\n            message:\"\"\r\n        }\r\n       \r\n      \r\n    }\r\n    handleSubmit = (e)=>{\r\n        const socket = this.context;\r\n        e.preventDefault();\r\n        const newMsgs = this.state.msgs.slice();\r\n        newMsgs.push({msg:this.state.message,owner:this.props.playerName})\r\n        let message = {msg:this.state.message,owner:this.props.playerName};\r\n        socket.emit(\"messageClientServer\",message);\r\n        this.setState({\r\n            message:\"\",\r\n            msgs:newMsgs\r\n        })\r\n        \r\n    }\r\n    componentDidMount(){\r\n      \r\n        const socket = this.context;\r\n     \r\n\r\n      \r\n        //server\r\n       socket.on(\"messageServerClient\",message=>{\r\n            console.log(message);\r\n          \r\n            const newMsgs = this.state.msgs.slice();\r\n            newMsgs.push({msg:message.msg,owner:message.owner})\r\n            this.setState({\r\n                msgs:newMsgs\r\n            })\r\n        })\r\n      \r\n    }\r\n    render() {\r\n        let messages = [];\r\n        for(let i=0;i<this.state.msgs.length;i++)\r\n        {\r\n            messages.push(<MessageBubble\r\n             title = {this.state.msgs[i].owner}\r\n             msg = {this.state.msgs[i].msg}\r\n             isMine ={this.props.playerName === this.state.msgs[i].owner}\r\n            />);\r\n        }\r\n        return (\r\n            <div className = \"chatBox\">\r\n                <div className =\"username\">{this.props.playerName}</div>\r\n                <div className =\"messageBox\" readOnly={true}>\r\n                  {messages}\r\n                </div>\r\n                <form className=\"chatBoxSendMsg\" onSubmit={this.handleSubmit.bind(this)}> \r\n                <input \r\n                    type=\"text\" \r\n                    placeholder =\"write a message...\"\r\n                    value = {this.state.message}\r\n                    onChange = {e=> this.setState({message:e.target.value})}\r\n                    />\r\n                <button type=\"submit\" className=\"chatBoxSendBtn\">Send</button>\r\n                </form>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"./login.css\"\r\nimport SocketContext from '../context/SocketContext';\r\nexport default class Login extends Component {\r\n    static contextType =SocketContext;\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            username:\"\",\r\n            room:\"room1\",\r\n            rooms:{}\r\n            \r\n        }\r\n       \r\n    }\r\n    componentDidMount(){\r\n      \r\n        const socket = this.context;\r\n         socket.emit(\"getRooms\",()=>{\r\n            console.log(\"get rooms.....\");\r\n        });\r\n         socket.on(\"sendRooms\",(roomUser)=>{\r\n            console.log(\"sendRooms...\");\r\n            this.setState({\r\n                rooms:roomUser\r\n            })\r\n          });\r\n        socket.on(\"error\",(msg)=>{\r\n            alert(msg);\r\n            window.location.replace(\"/\");\r\n        });\r\n      \r\n           socket.on(\"startGame\",()=>{\r\n                console.log(\"start game ......\")\r\n                const {start} = this.props;\r\n              \r\n                    start();\r\n                   \r\n             \r\n               \r\n               \r\n            })\r\n       \r\n     \r\n       \r\n    }\r\n \r\n    submitHandler = (e) =>{\r\n        e.preventDefault();\r\n        \r\n        const socket = this.context;\r\n        const {username,room} = this.state;\r\n        socket.emit(\"newUser\",{username,room},()=>{\r\n            console.log(\"we have a new user:\"+username+\" in room:\"+room);\r\n        });\r\n        socket.emit(\"getRooms\",()=>{\r\n            console.log(\"get rooms.....\");\r\n        });\r\n\r\n        \r\n       \r\n        \r\n    }\r\n    render() {\r\n      \r\n      \r\n\r\n     \r\n     \r\n     \r\n        return (\r\n            \r\n            <div className=\"login\">\r\n                <form className = \"loginForm\" onSubmit={this.submitHandler.bind(this)}>\r\n                    <h1 style={{textAlign:\"center\"}}>Login</h1>\r\n                    <label>Username:</label>\r\n                    <input autoFocus={true} type=\"text\" placeholder=\"username\" onChange={(e)=>this.setState({username:e.target.value})}/>\r\n                    <label>Room:</label>\r\n                    <input type=\"text\" placeholder=\"room\" value={this.state.room} onChange={(e)=>this.setState({room:e.target.value})}/>\r\n                    <button type=\"submit\" red={this.buttonRef} className=\"loginBtn\">Login</button>\r\n                </form>\r\n                <div className=\"loginRooms\">\r\n                    <h2 style={{textAlign:\"center\"}}>Rooms : users</h2>\r\n                    <div className=\"loginRoomsWrapper\">\r\n\r\n                    \r\n                    {\r\n                       Object.keys(this.state.rooms).map(r=>{\r\n                         return  (<div key={r} className=\"loginRoom\" onClick={()=>this.setState({room:r})}>\r\n\r\n                                    <span className=\"roomName\">{r} : </span>\r\n                                    {\r\n                                            this.state.rooms[r].map(user=>{\r\n                                                return(\r\n                                                         <span key={r+user} className=\"loginUser\">{user+\",\"} </span>\r\n                                                      )\r\n                                                    })\r\n                                            \r\n                                    }\r\n                                    </div>)\r\n                                })\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport Game from './components/game/Game';\nimport ChatBox from './components/chatBox/ChatBox';\nimport \"./App.css\";\n\nimport Login from './components/login/Login';\nimport SocketContext from './components/context/SocketContext';\n\n\n\n\nexport default  class App extends Component {\n  static contextType=SocketContext;\n  constructor(props){\n    super(props);\n    this.state = {\n        start:false,\n        playerData:{},\n        ennemyName:\"\"\n    }\n   \n  }\n  componentDidMount(){\n    const socket = this.context;\n   \n    socket.on(\"playerData\",this.savePlayerData.bind(this));\n    socket.on(\"playersNames\",(playersNames)=>{\n        playersNames = playersNames.filter(p=>p!=this.state.playerData.username);\n        this.setState({\n          ennemyName:playersNames[0]\n        })\n    })\n\n    \n  \n    \n  }\n  savePlayerData =(data)=>{\n    this.setState({\n      playerData:data\n    })\n    console.log(\"player data is saved...\");\n  }\n   render() {\n  \n  \n  \n  \n    \n    return (\n     \n      <div className=\"app\">\n        {\n          this.state.start?(\n              <div className =\"wrapper1\">\n                    <ChatBox playerName = {this.state.playerData.username}/>\n                   <Game player={this.state.playerData}  ennemy={this.state.ennemyName}/> \n              </div>\n          ):(\n            <div className=\"wrapper2\">\n               <Login start={()=>{this.setState({start:true});}}   />\n            </div>\n          )\n        }\n       \n      </div>\n     \n    )\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {SocketProvider} from \"./components/context/SocketContext\";\nimport {io} from \"socket.io-client\";\nconst socket = io(\"http://localhost:5001\");\nsocket.on(\"connect\",e=>{\n  console.log(socket.id)\n\n})\nReactDOM.render(\n  <React.StrictMode>\n    <SocketProvider value={socket}>\n       <App />\n    </SocketProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}